diff --git a/node_modules/@segment/analytics-react-native/lib/typescript/src/analytics.d.ts b/node_modules/@segment/analytics-react-native/lib/typescript/src/analytics.d.ts
index 4ee3741..c0481ce 100644
--- a/node_modules/@segment/analytics-react-native/lib/typescript/src/analytics.d.ts
+++ b/node_modules/@segment/analytics-react-native/lib/typescript/src/analytics.d.ts
@@ -139,7 +139,7 @@ export declare class SegmentClient {
     private onReady;
     flush(): Promise<void>;
     screen(name: string, options?: JsonMap): Promise<void>;
-    track(eventName: string, options?: JsonMap): Promise<void>;
+    track(eventName: string, options?: JsonMap, userId?: string, anonymousId?: string): Promise<void>;
     identify(userId?: string, userTraits?: UserTraits): Promise<void>;
     group(groupId: string, groupTraits?: GroupTraits): Promise<void>;
     alias(newUserId: string): Promise<void>;
@@ -167,7 +167,7 @@ export declare class SegmentClient {
      * @param nextAppState 'active', 'inactive', 'background' or 'unknown'
      */
     private handleAppStateChange;
-    reset(resetAnonymousId?: boolean): Promise<void>;
+    reset(anonymousId: string): Promise<void>;
     /**
      * Registers a callback for each plugin that gets added to the analytics client.
      * @param callback Function to call
diff --git a/node_modules/@segment/analytics-react-native/src/analytics.ts b/node_modules/@segment/analytics-react-native/src/analytics.ts
index 79cc609..6cd0456 100644
--- a/node_modules/@segment/analytics-react-native/src/analytics.ts
+++ b/node_modules/@segment/analytics-react-native/src/analytics.ts
@@ -412,8 +412,8 @@ export class SegmentClient {
     this.timeline.remove(plugin);
   }
 
-  async process(incomingEvent: SegmentEvent) {
-    const event = this.applyRawEventData(incomingEvent);
+  async process(incomingEvent: SegmentEvent, timestamp?: string) {
+    const event = this.applyRawEventData(incomingEvent, timestamp);
 
     if (this.isReady.value) {
       return this.startTimelineProcessing(event);
@@ -529,10 +529,12 @@ export class SegmentClient {
     this.logger.info('SCREEN event saved', event);
   }
 
-  async track(eventName: string, options?: JsonMap) {
+  async track(eventName: string, options?: JsonMap, userId?: string, anonymousId?: string) {
     const event = createTrackEvent({
       event: eventName,
       properties: options,
+      userId: userId,
+      anonymousId: anonymousId,
     });
 
     await this.process(event);
@@ -569,9 +571,11 @@ export class SegmentClient {
       userId: previousUserId,
       newUserId,
     });
+    const newTimestamp = new Date();
+    newTimestamp.setSeconds(newTimestamp.getSeconds() - 1);
 
-    await this.process(event);
-    this.logger.info('ALIAS event saved', event);
+    await this.process(event, newTimestamp.toISOString());
+    this.logger.info('ALIAS event saved', event, 'with timestamp', newTimestamp);
   }
 
   /**
@@ -676,11 +680,8 @@ export class SegmentClient {
     this.appState = nextAppState;
   }
 
-  async reset(resetAnonymousId = true) {
+  async reset(anonymousId: string) {
     try {
-      const { anonymousId: currentId } = await this.store.userInfo.get(true);
-      const anonymousId = resetAnonymousId === true ? getUUID() : currentId;
-
       await this.store.userInfo.set({
         anonymousId,
         userId: undefined,
@@ -791,11 +792,11 @@ export class SegmentClient {
    * @param event Segment Event
    * @returns event with data injected
    */
-  private applyRawEventData = (event: SegmentEvent): SegmentEvent => {
+  private applyRawEventData = (event: SegmentEvent, timestamp: string = new Date().toISOString()): SegmentEvent => {
     return {
       ...event,
       messageId: getUUID(),
-      timestamp: new Date().toISOString(),
+      timestamp,
       integrations: event.integrations ?? {},
     } as SegmentEvent;
   };
diff --git a/node_modules/@segment/analytics-react-native/src/events.ts b/node_modules/@segment/analytics-react-native/src/events.ts
index dc43fdd..e9734df 100644
--- a/node_modules/@segment/analytics-react-native/src/events.ts
+++ b/node_modules/@segment/analytics-react-native/src/events.ts
@@ -13,13 +13,19 @@ import {
 export const createTrackEvent = ({
   event,
   properties = {},
+  userId,
+  anonymousId,
 }: {
   event: string;
   properties?: JsonMap;
+  userId?: string;
+  anonymousId?: string;
 }): TrackEventType => ({
   type: EventType.TrackEvent,
   event,
   properties,
+  userId,
+  anonymousId,
 });
 
 export const createScreenEvent = ({
